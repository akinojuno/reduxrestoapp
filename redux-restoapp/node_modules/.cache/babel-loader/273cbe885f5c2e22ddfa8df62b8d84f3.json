{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport { cloneDeep } from 'lodash';\nconst initialState = {\n  categories: ['Food', 'Drink', 'Dessert'],\n  items: [{\n    id: uuidv4(),\n    name: \"Burger\",\n    price: 50,\n    category: \"Food\",\n    image: \"https://image.flaticon.com/icons/svg/1046/1046784.svg\"\n  }, {\n    id: uuidv4(),\n    name: \"Pizza\",\n    price: 100,\n    category: \"Food\",\n    image: \"https://image.flaticon.com/icons/svg/1046/1046771.svg\"\n  }, {\n    id: uuidv4(),\n    name: \"Fries\",\n    price: 25,\n    category: \"Food\",\n    image: \"https://image.flaticon.com/icons/svg/1046/1046786.svg\"\n  }, {\n    id: uuidv4(),\n    name: \"Coffee\",\n    price: 35,\n    category: \"Drink\",\n    image: \"https://image.flaticon.com/icons/svg/1046/1046785.svg\"\n  }, {\n    id: uuidv4(),\n    name: \"Iced Tea\",\n    price: 45,\n    category: \"Drink\",\n    image: \"https://image.flaticon.com/icons/svg/1046/1046782.svg\"\n  }, {\n    id: uuidv4(),\n    name: \"Hot Tea\",\n    price: 45,\n    category: \"Drink\",\n    image: \"https://image.flaticon.com/icons/svg/1046/1046792.svg\"\n  }],\n  cart: [],\n  total: 0\n};\n\nconst solveTotal = array => {\n  let total = 0;\n  array.forEach(cartItem => {\n    cartItem.subtotal = cartItem.price * cartItem.quantity;\n    total += cartItem.subtotal;\n  });\n  return total;\n};\n\nconst reducer = (state = initialState, action) => {\n  let item;\n  let cartCopy;\n  let total;\n\n  switch (action.type) {\n    case 'ADD_ITEM':\n      let newItem = action.payload;\n      newItem.id = uuidv4();\n      let itemsCopy = [newItem, ...state.items];\n      return { ...state,\n        items: itemsCopy\n      };\n\n    case 'ADD_TO_CART':\n      item = action.payload;\n      item.quantity = 0;\n      cartCopy = cloneDeep(state.cart);\n      let exists = false;\n      cartCopy = cartCopy.map(cartItem => {\n        if (cartItem.id === item.id) {\n          cartItem.quantity++;\n          exists = true;\n        }\n\n        return cartItem;\n      });\n\n      if (exists === false) {\n        item.quantity = 1;\n        cartCopy.push(item);\n      }\n\n      total = solveTotal(cartCopy);\n      console.log(total);\n      return { ...state,\n        cart: cartCopy,\n        total: total\n      };\n\n    case 'CHANGE_QUANTITY':\n      let operation = action.payload.operation;\n      item = action.payload.item;\n\n      if (operation === 'minus') {\n        if (item.quantity > 0) {\n          item.quantity--;\n        } else {\n          return state;\n        }\n      } else {\n        item.quantity++;\n      }\n\n      cartCopy = [...state.cart];\n      let updatedCart = cartCopy.map(cartItem => {\n        return cartItem.id === item.id ? item : cartItem;\n      });\n      total = solveTotal(updatedCart);\n      return { ...state,\n        cart: cloneDeep(updatedCart),\n        total: total\n      };\n\n    case 'DELETE_ITEM':\n      // alert(action.payload);\n      let cartClone = cloneDeep(state.cart);\n      let newCart = cartClone.filter(cart => cart.id !== action.payload);\n      alert(`${state.cart.name} is removed from cart!`);\n      total = solveTotal(newCart);\n      return { ...state,\n        cart: cloneDeep(newCart),\n        total: total\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/projects/projects-redux-branch-redux-files/redux-files/redux-restoapp/src/redux/reducer.js"],"names":["v4","uuidv4","cloneDeep","initialState","categories","items","id","name","price","category","image","cart","total","solveTotal","array","forEach","cartItem","subtotal","quantity","reducer","state","action","item","cartCopy","type","newItem","payload","itemsCopy","exists","map","push","console","log","operation","updatedCart","cartClone","newCart","filter","alert"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { cloneDeep } from 'lodash';\n\nconst initialState = {\n  categories: ['Food', 'Drink', 'Dessert'],\n  items: [\n    {\n        id: uuidv4(),\n        name: \"Burger\", \n        price: 50, \n        category: \"Food\",\n        image: \"https://image.flaticon.com/icons/svg/1046/1046784.svg\"\n    },\n    {\n      id: uuidv4(),\n        name: \"Pizza\", \n        price: 100, \n        category: \"Food\",\n        image: \"https://image.flaticon.com/icons/svg/1046/1046771.svg\"\n    },\n    {\n        id: uuidv4(),\n        name: \"Fries\", \n        price: 25, \n        category: \"Food\",\n        image: \"https://image.flaticon.com/icons/svg/1046/1046786.svg\"\n    },\n    {\n        id: uuidv4(),\n        name: \"Coffee\", \n        price: 35, \n        category: \"Drink\",\n        image: \"https://image.flaticon.com/icons/svg/1046/1046785.svg\"\n    },\n    {\n      id: uuidv4(),\n        name: \"Iced Tea\", \n        price: 45, \n        category: \"Drink\",\n        image: \"https://image.flaticon.com/icons/svg/1046/1046782.svg\"\n    },\n    {\n        id: uuidv4(),\n        name: \"Hot Tea\", \n        price: 45, \n        category: \"Drink\",\n        image: \"https://image.flaticon.com/icons/svg/1046/1046792.svg\"\n    },\n  ],\n  cart: [],\n  total: 0\n};\n\n\n\nconst solveTotal = (array) => {\n  let total = 0;\n  array.forEach( cartItem => {\n    cartItem.subtotal = cartItem.price * cartItem.quantity \n    total += cartItem.subtotal; \n  });\n\n  return total;\n}\n\nconst reducer = (state = initialState, action) => {\n  let item;\n  let cartCopy;\n  let total;\n  switch (action.type) {\n    case 'ADD_ITEM':\n      let newItem = action.payload;\n      newItem.id = uuidv4();\n      let itemsCopy = [newItem, ...state.items];\n      return {\n        ...state,\n        items: itemsCopy\n      };\n    case 'ADD_TO_CART':\n          item = action.payload;\n          item.quantity = 0;\n          cartCopy = cloneDeep(state.cart);\n          let exists = false;\n\n              cartCopy = cartCopy.map( cartItem => {\n                  if(cartItem.id === item.id) {\n                      cartItem.quantity++;\n                      exists = true;\n                  }\n\n                  return cartItem;\n              });\n              \n              if(exists === false) {\n            \n                item.quantity = 1;\n                cartCopy.push(item);\n              }\n          \n              total = solveTotal(cartCopy);\n\n\n              console.log(total)\n              \n              return {\n                  ...state,\n                  cart: cartCopy,\n                  total: total\n              }\n    case 'CHANGE_QUANTITY':\n        let operation = action.payload.operation;\n        item = action.payload.item;\n\n        if(operation === 'minus') {\n            if( item.quantity > 0 ){\n              item.quantity--;\n            } else {\n              return state;\n            }\n              \n        } else {\n            item.quantity++;\n        }\n\n        \n\n        cartCopy = [...state.cart];\n\n        let updatedCart = cartCopy.map( cartItem => {\n            return cartItem.id === item.id ? item : cartItem\n        });\n\n        total = solveTotal(updatedCart);\n\n        return {\n          ...state,\n          cart: cloneDeep(updatedCart),\n          total: total\n      }\n\n    case 'DELETE_ITEM':\n\n      // alert(action.payload);\n        let cartClone = cloneDeep(state.cart)\n        let newCart = cartClone.filter(\n          cart => cart.id !== action.payload\n        );\n\n        alert(`${state.cart.name} is removed from cart!`)\n\n        total = solveTotal(newCart);\n        return {\n          ...state,\n          cart: cloneDeep(newCart),\n          total: total\n         \n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}