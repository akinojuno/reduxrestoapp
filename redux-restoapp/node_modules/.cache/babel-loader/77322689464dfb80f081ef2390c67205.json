{"ast":null,"code":"var _jsxFileName = \"/Users/akinojuno/Desktop/aquino/projects/projects-redux-branch-redux-files/redux-files/redux-restoapp/src/components/CartItems.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartItems = props => {\n  console.log();\n  const {\n    name,\n    image,\n    quantity\n  } = props.items;\n\n  const removeItem = () => {\n    if (quantity === 1) {\n      alert(`${name} is removed from cart!`);\n      props.deleteItemBtn(props.items.id);\n    } else {\n      props.changeQuantity(props.items, 'minus');\n    }\n\n    if (props.cart.length > 0) {\n      alert('Cart is empty!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete\",\n      onClick: () => props.deleteItemBtn(props.items.id),\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartItemContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        width: 100,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeItem,\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"qty\",\n          type: \"number\",\n          value: quantity,\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.changeQuantity(props.items, 'plus'),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Sub-Total: Php \", props.items.subtotal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_c = CartItems;\n\nconst mapStateToProps = store => {\n  return {\n    cart: store.cart,\n    item: store.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: item => dispatch({\n      type: 'ADD_TO_CART',\n      payload: item\n    }),\n    changeQuantity: (item, operation) => dispatch({\n      type: 'CHANGE_QUANTITY',\n      payload: {\n        item,\n        operation\n      }\n    }),\n    deleteItemBtn: item => dispatch({\n      type: 'DELETE_ITEM',\n      payload: item\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItems);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItems\");","map":{"version":3,"sources":["/Users/akinojuno/Desktop/aquino/projects/projects-redux-branch-redux-files/redux-files/redux-restoapp/src/components/CartItems.js"],"names":["React","connect","CartItems","props","console","log","name","image","quantity","items","removeItem","alert","deleteItemBtn","id","changeQuantity","cart","length","subtotal","mapStateToProps","store","item","mapDispatchToProps","dispatch","addToCart","type","payload","operation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzBC,EAAAA,OAAO,CAACC,GAAR;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BL,KAAK,CAACM,KAAxC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIF,QAAQ,KAAK,CAAjB,EAAoB;AAClBG,MAAAA,KAAK,CAAE,GAAEL,IAAK,wBAAT,CAAL;AACAH,MAAAA,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACM,KAAN,CAAYI,EAAhC;AACD,KAHD,MAGO;AACLV,MAAAA,KAAK,CAACW,cAAN,CAAqBX,KAAK,CAACM,KAA3B,EAAkC,OAAlC;AACD;;AACD,QAAGN,KAAK,CAACY,IAAN,CAAWC,MAAX,GAAoB,CAAvB,EAAyB;AACvBL,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAMR,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACM,KAAN,CAAYI,EAAhC,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEN,KAAV;AAAiB,QAAA,KAAK,EAAE,GAAxB;AAA6B,QAAA,GAAG,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEG;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAA,gCAES;AAAQ,UAAA,OAAO,EAAGI,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFT,eAGS;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAqC,UAAA,KAAK,EAAEF,QAA5C;AAAsD,UAAA,GAAG,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAHT,eAIS;AAAQ,UAAA,OAAO,EAAG,MAAML,KAAK,CAACW,cAAN,CAAqBX,KAAK,CAACM,KAA3B,EAAkC,MAAlC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJT,eAKS;AAAA;AAAA;AAAA;AAAA,gBALT,eAMS;AAAA,wCAAsBN,KAAK,CAACM,KAAN,CAAYQ,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAlCH;;KAAMf,S;;AAoCN,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAM;AACJJ,IAAAA,IAAI,EAAEI,KAAK,CAACJ,IADR;AAEJK,IAAAA,IAAI,EAAED,KAAK,CAACV;AAFR,GAAN;AAID,CALD;;AAOA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHC,IAAAA,SAAS,EAAEH,IAAI,IAAIE,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,aAAP;AAAsBC,MAAAA,OAAO,EAAEL;AAA/B,KAAD,CADxB;AAEHN,IAAAA,cAAc,EAAE,CAACM,IAAD,EAAOM,SAAP,KAAqBJ,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,iBAAP;AAA0BC,MAAAA,OAAO,EAAE;AAACL,QAAAA,IAAD;AAAOM,QAAAA;AAAP;AAAnC,KAAD,CAF1C;AAGHd,IAAAA,aAAa,EAAEQ,IAAI,IAAIE,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,aAAP;AAAsBC,MAAAA,OAAO,EAAEL;AAA/B,KAAD;AAH5B,GAAP;AAKD,CAND;;AASA,eAAenB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA8CnB,SAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\n\nconst CartItems = (props) => {\n    console.log()\n    const { name, image, quantity } = props.items;\n\n    const removeItem = () => {\n      if (quantity === 1) {\n        alert(`${name} is removed from cart!`)\n        props.deleteItemBtn(props.items.id)\n      } else {\n        props.changeQuantity(props.items, 'minus')\n      }\n      if(props.cart.length > 0){\n        alert('Cart is empty!')\n      }\n    }\n\n    return(\n      <div className=\"Menu\">\n        <button className=\"delete\" onClick={() => props.deleteItemBtn(props.items.id)}>‚ùå</button>\n        <div className=\"cartItemContainer\">\n          <img src={image} width={100} alt={name} />\n           <p>{name}</p> \n           <p>\n                    \n                    <button onClick={ removeItem }> - </button> \n                    <input className=\"qty\" type=\"number\" value={quantity} min=\"1\"/>\n                    <button onClick={ () => props.changeQuantity(props.items, 'plus') }>+</button>\n                    <br/>\n                    <span>Sub-Total: Php {props.items.subtotal}</span>\n                </p>\n        </div>\n\n      </div>\n    );\n  }\n\nconst mapStateToProps = store => {\n  return{\n    cart: store.cart,\n    item: store.items\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      addToCart: item => dispatch({type: 'ADD_TO_CART', payload: item}),\n      changeQuantity: (item, operation) => dispatch({type: 'CHANGE_QUANTITY', payload: {item, operation}}),\n      deleteItemBtn: item => dispatch({type: 'DELETE_ITEM', payload: item}),\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CartItems);"]},"metadata":{},"sourceType":"module"}